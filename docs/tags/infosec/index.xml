<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>infosec on quac tran</title>
    <link>https://tranquac.github.io/tags/infosec/</link>
    <description>Recent content in infosec on quac tran</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 20 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tranquac.github.io/tags/infosec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Vulnstack1] RCE via MySQL Log File, YxCMS, Pivoting Attack Internal Network</title>
      <link>https://tranquac.github.io/write-up/vulnstack1/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/write-up/vulnstack1/</guid>
      <description>Summary  Introduce Setup Foothold  Recon RCE via MySQL Log File RCE via YxCMS   Recon Internal Network Exploit Internal Network Bloodhound  Introduce Một ngày tình cờ vu vơ trên không gian mạng. Khi đang đọc blog của các pháp sư Trung Hoa tuổi trẻ tài cao. Tôi tình cờ biết đến loạt bài lab red team thực chiến . Thấy phạm vi của lab khá rộng, attack từ mạng ngoài vào DMZ rồi vào internal network, domain, pivot, xoay vòng, … giống như mô hình mạng của một công ty, doanh nghiệp vậy.</description>
    </item>
    
    <item>
      <title>CrossC2 – Generate CobaltStrike’s Cross-Platform Payload</title>
      <link>https://tranquac.github.io/posts/2021/11/crossc2-generate-cobaltstrikes-cross-platform-payload/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/11/crossc2-generate-cobaltstrikes-cross-platform-payload/</guid>
      <description>Introduce Config  Listener Generate beacon  Gen via command Gen via install plugin     Result References  Introduce   &amp;ldquo;Cobalt Strike is threat emulation software. Execute targeted attacks against modern enterprises with one of the most powerful network attack kits available to penetration testers. This is not compliance testing.&amp;rdquo;
  Nếu như bạn từng sử dụng Cobalt Strike chắc cũng sẽ biết Cobalt Strike không hỗ trợ điều khiển từ xa Linux, MacOS, Android&amp;hellip; theo mặc định.</description>
    </item>
    
    <item>
      <title>My Notes on Code-Review</title>
      <link>https://tranquac.github.io/posts/2021/08/my-notes-on-code-review/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/08/my-notes-on-code-review/</guid>
      <description>The Fast Approach  First Leaked Secrets and Weak Encryption New Patches and Outdated Dependencies Developer Comments Debug Functionalities, Configuration Files, and Endpoints   The Detailed Approach  Important Functions User Input   Reference  The Fast Approach First  Using grep =&amp;gt; Look for specific dangerous patterns like specific -&amp;gt;  functions strings keywords and coding patterns that are known to be dangerous. Like =&amp;gt; eval() function   Focus on the search for dangerous functions used on user-controlled data.</description>
    </item>
    
    <item>
      <title>Tunneling, Pivoting to Attack Internal Network</title>
      <link>https://tranquac.github.io/posts/2021/07/tunneling-pivoting-to-attack-internal-network/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/07/tunneling-pivoting-to-attack-internal-network/</guid>
      <description>Intro Tools for tunneling  SSH Tunnel  Local Port Porwarding Remote Port Porwarding Dynamic Port Porwarding Sshuttle   Netword Layer Tunnel Transport Layer Tunnel Application Layer Tunnel Other tools pivoting without SSH  Metasploit Framework Chisel Ssf     Create SOCKS Proxy to Attack Internal Network Refer  Intro   Có rất nhiều bài viêt,blog nói về việc tấn công,xâm nhập mạng nội bộ trên Internet, nhưng hầu hết trong số chúng tập trung vào việc sử dụng các công cụ, các nguyên tắc, tình huống ít được đề cập, giải thích nhiều.</description>
    </item>
    
    <item>
      <title>JWT Attack</title>
      <link>https://tranquac.github.io/posts/2021/07/jwt-attack/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/07/jwt-attack/</guid>
      <description>What is JWT?  Header Payload Signature Sample JWT   Attack methods  Encryption algorithm Brute force secret key Change KID Change JKU / X5U Other methods    What is JWT  Tên đầy đủ của JWT là Json Web Token. Nó tuân theo định dạng JSON và mã hóa thông tin người dùng vào token. Máy chủ không lưu trữ bất kỳ thông tin người dùng nào, chỉ thông tin chính và xác minh token bằng cách sử dụng một thuật toán mã hóa cụ thể và xác minh danh tính của người dùng thông qua token.</description>
    </item>
    
    <item>
      <title>Android Pentest Note</title>
      <link>https://tranquac.github.io/posts/2021/07/android-pentest-note/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/07/android-pentest-note/</guid>
      <description>Concept Decompile and compile Using Adb and Frida interact Android  Concept Structure  AndroidManifest file contains the application’s structure Res folder contains all the resources that the application needs to run , including user interface layout, icons, audio, etc. The most interesting files for us are the classes.dex files because they are the compiled java files. The .dex extension stands for Dalvik EXecutable. So we need to decompile these dex files to get the java classes.</description>
    </item>
    
    <item>
      <title>Linux Backdoors</title>
      <link>https://tranquac.github.io/posts/2021/06/linux-backdoors/</link>
      <pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/06/linux-backdoors/</guid>
      <description>Trong thực tế khi có quyền truy cập vào mục tiêu(SSH, VNC, interactive shell &amp;hellip;) thì việc để lại backdoor là một phần quan trọng để duy trì quyền truy cập vào hệ thống mục tiêu. Do đó, việc học một số kỹ thuật backdoor là điều cần thiết, không chỉ đối với những kẻ tấn công mà cả những người phòng thủ. Sau đây chúng ta sẽ tìm hiểu một số kĩ thuật backdoor thông dụng.</description>
    </item>
    
    <item>
      <title>SQL</title>
      <link>https://tranquac.github.io/posts/2021/06/sql/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/06/sql/</guid>
      <description>General  MySQL (3306) MSSQL (1433) Oracle (1521) PostgresSQL (5432)   SQL Injection  Bad character detect Authen bypass Sql injection bypass filter   SQLMAP Reference  General MySQL-3306 Nmap nmap -Pn -sV -p 3306 --script mysql* TARGETIP Access Remotely: mysql -host=TARGETIP -u root -p mysql -u root -p password -e &amp;#39;show databases;&amp;#39; mysql -u root -p password DBNAME -e &amp;#39;select * from TABLENAME;&amp;#39; Access Locally: mysql -u root -p mysql&amp;gt; use DBNAME; mysql&amp;gt; show tables; Command Backdoor example: SELECT &amp;#34;&amp;lt;?</description>
    </item>
    
    <item>
      <title>XXE</title>
      <link>https://tranquac.github.io/posts/2021/06/xxe/</link>
      <pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/06/xxe/</guid>
      <description>What is XXE Types of XXE attacks  XXE To retrieve files  Example XXE through the XInclude tag Exploiting XXE using SVG Files or docx files or xlsx files   XXE Into SSRF Blind XXE   Payloads Note References  What is XXE XXE = XML eXternal Entities
XXE can occur when XML documents get parsed. We traditionally think of XXE vulnerabilities as uploading an XML file that includes an external entity, an example of this would be:</description>
    </item>
    
    <item>
      <title>OSCP CheatSheet</title>
      <link>https://tranquac.github.io/posts/2021/04/oscp-cheatsheet/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tranquac.github.io/posts/2021/04/oscp-cheatsheet/</guid>
      <description>This is all I have gathered from my practice and oscp exam. It is quite complete. Hope it will help your exam.
 Try Harder  Summary  Around Kali The Essential Tools Passive Info Gathering Active Information Gathering Vulnerability Scanning Buffer Overflows Win32 Buffer Overflows Linux Buffer Overflows Exploits File Transfers Privilege Escalation Client Side Attacks Web Application Attacks Password Attacks Port Redirection and Tunneling Metasploit Bypassing Antivirus Software Forensics  Around Kali Finding Around Kali Find, Locate, and Which locate Reads from a database prepared by updatedb</description>
    </item>
    
  </channel>
</rss>
